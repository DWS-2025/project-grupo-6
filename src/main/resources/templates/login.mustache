<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>XPRESSALY</title>
    <link rel="stylesheet" href="/css/login.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600&display=swap" rel="stylesheet">
</head>

<body>
    <div class="container">
        <div class="left-section">
            <!-- Name and logo -->
            <div class="logo-container">
                <h1 class="header">
                    <img src="/Images/Logos/logotipo.png" alt="Logo">
                </h1>
            </div>

            <!-- Image carousel -->
            <div class="carousel-container">
                <div class="carousel">
                    <img src="/Images/Air Purifier.jpg" alt="Image 1">
                    <img src="/Images/Desk Organizer.jpg" alt="Image 2">
                    <img src="/Images/Electric Blanket.jpg" alt="Image 3">
                    <img src="/Images/Electric Scooter.jpg" alt="Image 4">
                    <img src="/Images/External Hard Drive.jpg" alt="Image 5">
                    <img src="/Images/Gaming Chair.jpg" alt="Image 6">
                    <img src="/Images/Laptop Cooling Pad.jpg" alt="Image 7">
                    <img src="/Images/phone.jpg" alt="Image 8">
                </div>
            </div>
        </div>

        <div class="right-section">
            <!-- Login Form -->
            <form action="/login" method="post" class="auth-form">
                <h2>Log in</h2>
                {{#error}}
                <div class="error-message" style="color: #ff4444; margin-bottom: 15px; font-size: 14px;">{{error}}</div>
                {{/error}}
                <input type="text" name="email" placeholder="Email" required>
                <input type="password" name="password" placeholder="Password" required>
                <button type="submit" class="btn-submit">Sign in</button>
                <p class="signup-prompt">You don't have an account? <a href="#" id="openSignupModal">Register</a></p>
            </form>
        </div>

        <!-- Register Modal -->
        <div id="signupModal" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <h2>Register</h2>
                <form action="/register" method="post" class="auth-form" onsubmit="return handleRegistration(event)">
                    <input type="text" name="email" placeholder="Email" required>
                    <input type="password" name="password" placeholder="Password" minlength="8" required>
                    <input type="tel" name="phoneNumber" placeholder="Phone Number" required>
                    <input type="number" name="age" placeholder="Age" min="1" max="120" required>
                    <input type="text" name="firstName" placeholder="Name" required>
                    <input type="text" name="lastName" placeholder="Surname" required>
                    <input type="text" name="address" placeholder="Address" required>
                    <button type="submit" class="btn-submit">Register</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Modal handling
        const modal = document.getElementById("signupModal");
        const openModalBtn = document.getElementById("openSignupModal");
        const closeBtn = document.getElementsByClassName("close")[0];

        openModalBtn.onclick = function() {
            modal.style.display = "block";
        }

        closeBtn.onclick = function() {
            modal.style.display = "none";
        }

        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
        
        // Carousel functionality
        const carouselImages = document.querySelectorAll('.carousel img');
        let currentImageIndex = 0;
        let nextImageIndex = 1;
        let prevImageIndex = carouselImages.length - 1;
        
        // Initialize carousel
        function initCarousel() {
            // Position all images initially
            carouselImages.forEach((img, index) => {
                if (index === currentImageIndex) {
                    img.classList.add('active');
                    img.style.transform = 'translateX(0) scale(1)';
                    img.style.opacity = '1';
                    img.style.zIndex = '3';
                    img.style.filter = 'blur(0)';
                } else if (index === nextImageIndex) {
                    img.style.transform = 'translateX(50%) scale(0.8)';
                    img.style.opacity = '0.7';
                    img.style.zIndex = '2';
                    img.style.filter = 'blur(1px)';
                } else if (index === prevImageIndex) {
                    img.style.transform = 'translateX(-50%) scale(0.8)';
                    img.style.opacity = '0.7';
                    img.style.zIndex = '1';
                    img.style.filter = 'blur(1px)';
                } else {
                    img.style.transform = 'translateX(0) scale(0.6)';
                    img.style.opacity = '0';
                    img.style.zIndex = '0';
                }
            });
            
            // Start automatic rotation
            setInterval(nextSlide, 3000);
        }
        
        // Function to move to the next slide
        function nextSlide() {
            // Remove active class from current image
            carouselImages[currentImageIndex].classList.remove('active');
            
            // Update indices
            prevImageIndex = currentImageIndex;
            currentImageIndex = nextImageIndex;
            nextImageIndex = (nextImageIndex + 1) % carouselImages.length;
            
            // Update styles for all images
            carouselImages.forEach((img, index) => {
                if (index === currentImageIndex) {
                    img.classList.add('active');
                    img.style.transform = 'translateX(0) scale(1)';
                    img.style.opacity = '1';
                    img.style.zIndex = '3';
                    img.style.filter = 'blur(0)';
                } else if (index === nextImageIndex) {
                    img.style.transform = 'translateX(50%) scale(0.8)';
                    img.style.opacity = '0.7';
                    img.style.zIndex = '2';
                    img.style.filter = 'blur(1px)';
                } else if (index === prevImageIndex) {
                    img.style.transform = 'translateX(-50%) scale(0.8)';
                    img.style.opacity = '0.7';
                    img.style.zIndex = '1';
                    img.style.filter = 'blur(1px)';
                } else {
                    img.style.transform = 'translateX(0) scale(0.6)';
                    img.style.opacity = '0';
                    img.style.zIndex = '0';
                }
            });
        }
        
        // Initialize carousel when document is ready
        document.addEventListener('DOMContentLoaded', initCarousel);

        // Notification styles
        const styleSheet = document.createElement("style");
        styleSheet.textContent = `
            .notification {
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 15px 25px;
                color: white;
                border-radius: 5px;
                box-shadow: 0 2px 5px rgba(0,0,0,0.2);
                opacity: 0;
                transform: translateY(-20px);
                transition: opacity 0.3s, transform 0.3s;
                z-index: 1000;
            }

            .notification.show {
                opacity: 1;
                transform: translateY(0);
            }

            .notification.success {
                background-color: #4CAF50;
            }

            .notification.error {
                background-color: #ff4444;
            }
        `;
        document.head.appendChild(styleSheet);

        // Notification element
        const notificationDiv = document.createElement("div");
        notificationDiv.id = "notification";
        notificationDiv.className = "notification";
        document.body.appendChild(notificationDiv);

        function showNotification(message, type = 'error') {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.className = `notification ${type}`;
            notification.classList.add('show');
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }

        function handleRegistration(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            // Basic client-side validation
            const email = formData.get('email');
            const password = formData.get('password');
            const phoneNumber = formData.get('phoneNumber');
            const age = formData.get('age');

            if (!email.includes('@')) {
                showNotification('Please enter a valid email address');
                return false;
            }

            if (password.length < 8) {
                showNotification('Password must be at least 8 characters long');
                return false;
            }

            if (!/^\d+$/.test(phoneNumber)) {
                showNotification('Phone number must contain only digits');
                return false;
            }

            if (age < 18 || age > 120) {
                showNotification('Please enter a valid age between 18 and 120');
                return false;
            }
    
            fetch('/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: new URLSearchParams(formData)
            })
            .then(response => {
                if (!response.ok) {
                    return response.text().then(text => {
                        try {
                            return JSON.parse(text);
                        } catch {
                            throw new Error(text || 'Registration failed');
                        }
                    });
                }
                return response.json();
            })
            .then(data => {
                if (data.error) {
                    throw new Error(data.error);
                }
                
                localStorage.setItem('userData', JSON.stringify({
                    email: formData.get('email'),
                    phoneNumber: formData.get('phoneNumber'),
                    age: formData.get('age'),
                    firstName: formData.get('firstName'),
                    lastName: formData.get('lastName'),
                    address: formData.get('address')
                }));
                
                // Show success message before redirecting
                showNotification('Registration successful! Redirecting...', 'success');
                setTimeout(() => {
                    window.location.href = '/products';
                }, 1500);
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification(error.message || 'Registration failed. Please try again.');
            });
    
            return false;
        }
    </script>
</body>
</html>