<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <style>
    .Btn {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        width: 45px;
        height: 45px;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        position: absolute;
        top: 350px;
        right: -1380px;
        overflow: hidden;
        transition-duration: .3s;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.199);
        background-color: rgb(255, 65, 65);
        z-index: 1000;
    }

    .sign {
        width: 100%;
        transition-duration: .3s;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .sign svg {
        width: 17px;
    }

    .sign svg path {
        fill: white;
    }

    .text {
        position: absolute;
        right: 0%;
        width: 0%;
        opacity: 0;
        color: white;
        font-size: 1.2em;
        font-weight: 600;
        transition-duration: .3s;
    }

    .Btn:hover {
        width: 125px;
        border-radius: 40px;
        transition-duration: .3s;
    }

    .Btn:hover .sign {
        width: 30%;
        transition-duration: .3s;
        padding-left: 20px;
    }

    .Btn:hover .text {
        opacity: 1;
        width: 70%;
        transition-duration: .3s;
        padding-right: 10px;
    }

    .Btn:active {
        transform: translate(2px ,2px);
    }
    </style>
</head>

<body>
    {{> common/header}}
    <a href="/login" class="Btn" style="text-decoration: none;">
        <div class="sign"><svg viewBox="0 0 512 512"><path d="M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z"></path></svg></div>
        <div class="text">Logout</div>
    </a>
    

    <main>
        <!-- Profile Picture -->
        <div class="profile-section">
            <div class="profile-picture">
                👤
            </div>
            <p id="userName">{{name}} {{surname}}</p>
        </div>

        <!-- Personal data section -->
        <div class="personal-data">
            <h2>Personal Data</h2>
            <form action="/update-profile" method="post">
                <label>Name:</label>
                <input type="text" name="firstName" value="{{name}}" class="w-full p-2 border rounded mb-4 text-[#294156]">

                <label>Surname:</label>
                <input type="text" name="lastName" value="{{surname}}" class="w-full p-2 border rounded mb-4 text-[#294156]">

                <label>Email:</label>
                <input type="email" name="email" value="{{email}}" class="w-full p-2 border rounded mb-4 text-[#294156]">

                <label>Address:</label>
                <input type="text" name="address" value="{{address}}" class="w-full p-2 border rounded mb-4 text-[#294156]">

                <label>Phone Number:</label>
                <input type="text" name="phone" value="{{phone}}" class="w-full p-2 border rounded mb-4 text-[#294156]">

                <label>Age:</label>
                <input type="number" name="age" value="{{age}}" class="w-full p-2 border rounded mb-4 text-[#294156]">

                <label>Current Password:</label>
                <div class="password-container flex items-center gap-2">
                    <input type="password" id="currentPasswordInput" value="{{password}}" class="w-full p-2 border rounded mb-4 text-[#294156]" disabled>
                    <button type="button" onclick="toggleCurrentPasswordVisibility()" class="bg-[#567C8D] text-white px-4 py-2 rounded hover:bg-[#294156] transition-colors">Show</button>
                </div>

                <button type="button" onclick="togglePasswordSection()" class="change-password-btn">
                    <i class="fas fa-key"></i> <!-- Ícono opcional (requiere FontAwesome) -->
                    Change Password
                </button>
                <div id="passwordSection" style="display: none;">
                    <label>New Password:</label>
                    <div class="password-container flex items-center gap-2">
                        <input type="password" id="passwordInput" name="password" placeholder="Enter new password" class="w-full p-2 border rounded mb-4 text-[#294156]">
                        <button type="button" onclick="togglePasswordVisibility()" class="bg-[#567C8D] text-white px-4 py-2 rounded hover:bg-[#294156] transition-colors">Show</button>
                    </div>
                    <label>Confirm Password:</label>
                    <div class="password-container flex items-center gap-2">
                        <input type="password" id="confirmPasswordInput" name="confirmPassword" placeholder="Confirm new password" class="w-full p-2 border rounded mb-4 text-[#294156]">
                        <button type="button" onclick="toggleConfirmPasswordVisibility()" class="bg-[#567C8D] text-white px-4 py-2 rounded hover:bg-[#294156] transition-colors">Show</button>
                    </div>
                </div>

                <button type="submit" class="update-profile-btn">Update Profile</button>
            </form>
        </div>

        <!-- Options menu -->
        <div class="options-menu">
            <a class="option-card">
            <h3>My orders</h3>
            {{#orders}}
                <div class="order-card">
                <h3>Order #{{id}}</h3>
                <p>Delivery Address: {{address}}</p>
                {{#products}}
                    <p>-{{name}} x {{amount}}: ${{price}}</p>
                {{/products}}
                <p>Total: ${{total}}</p>
                </div>
            {{/orders}}
            {{^orders}}
                <p class="no-reviews">No orders yet.</p>
            {{/orders}}
            </a>
        </div>

        <!-- Reviews Section -->
        <div class="reviews-section">
            <h2>My Reviews</h2>
            {{#reviews}}
            <a href="/product-details?id={{productId}}" class="review-card" style="text-decoration: none; color: inherit; display: block;">
                <input type="number" name="productId" value="{{productId}}" hidden>
                <h3>{{productName}}</h3>
                <div class="rating">
                    <span class="star">★</span>
                    <span class="rating-value">{{rating}}/5</span>
                </div>
                <p class="review-comment">{{comment}}</p>
                <span class="review-date">{{date}}</span>
            </a>
            {{/reviews}}
            {{^reviews}}
            <p class="no-reviews">No reviews yet.</p>
            {{/reviews}}
        </div>
    </main>

    {{> common/footer}}

    <script>
        function togglePasswordSection() {
            const passwordSection = document.getElementById("passwordSection");
            passwordSection.style.display = passwordSection.style.display === "none" ? "block" : "none";
        }

        function togglePasswordVisibility() {
            const passwordInput = document.getElementById("passwordInput");
            const toggleButton = passwordInput.nextElementSibling;

            if (passwordInput.type === "password") {
                passwordInput.type = "text";
                toggleButton.textContent = "Hide";
            } else {
                passwordInput.type = "password";
                toggleButton.textContent = "Show";
            }
        }

        function toggleConfirmPasswordVisibility() {
            const confirmPasswordInput = document.getElementById("confirmPasswordInput");
            const toggleButton = confirmPasswordInput.nextElementSibling;

            if (confirmPasswordInput.type === "password") {
                confirmPasswordInput.type = "text";
                toggleButton.textContent = "Hide";
            } else {
                confirmPasswordInput.type = "password";
                toggleButton.textContent = "Show";
            }
        }

        function toggleCurrentPasswordVisibility() {
            const currentPasswordInput = document.getElementById("currentPasswordInput");
            const toggleButton = currentPasswordInput.nextElementSibling;

            if (currentPasswordInput.type === "password") {
                currentPasswordInput.type = "text";
                toggleButton.textContent = "Hide";
            } else {
                currentPasswordInput.type = "password";
                toggleButton.textContent = "Show";
            }
        }

        document.querySelector('form').addEventListener('submit', function(e) {
            e.preventDefault();
            const firstName = document.querySelector('input[name="firstName"]').value;
            const lastName = document.querySelector('input[name="lastName"]').value;
            const email = document.querySelector('input[name="email"]').value;
            const phone = document.querySelector('input[name="phone"]').value;
            const age = document.querySelector('input[name="age"]').value;
            const address = document.querySelector('input[name="address"]').value;
            const currentPassword = document.getElementById('currentPasswordInput').value;
            const newPassword = document.getElementById('passwordInput').value;
            const confirmPassword = document.getElementById('confirmPasswordInput').value;

            // Validate required fields
            if (!firstName || !lastName || !email) {
                alert('Name, Surname and Email are required fields.');
                return;
            }

            // Validate email format
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                alert('Please enter a valid email address.');
                return;
            }

            // Validate phone number (optional field)
            if (phone) {
                const phoneRegex = /^[0-9+\-\s()]*$/;
                if (!phoneRegex.test(phone)) {
                    alert('Please enter a valid phone number.');
                    return;
                }
            }

            // Validate age (optional field)
            if (age) {
                const ageNum = parseInt(age);
                if (isNaN(ageNum) || ageNum < 0 || ageNum > 120) {
                    alert('Please enter a valid age between 0 and 120.');
                    return;
                }
            }

            // Password validation
            if (newPassword && confirmPassword) {
                if (newPassword.length < 8) {
                    alert('The password must be at least 8 characters.');
                    return;
                }

                if (newPassword !== confirmPassword) {
                    alert('The new passwords do not match. Please verify that they are the same.');
                    return;
                }

                if (newPassword === currentPassword) {
                    alert('The new password cannot be the same as the current password.');
                    return;
                }
            }

            // Create form data
            const formData = new FormData();
            formData.append('firstName', firstName);
            formData.append('lastName', lastName);
            formData.append('email', email);
            formData.append('phone', phone);
            formData.append('age', age);
            formData.append('address', address);
            if (newPassword) {
                formData.append('password', newPassword);
            }

            // Submit form using fetch
            fetch('/update-profile', {
                method: 'POST',
                body: formData,
                headers: {
                    'Accept': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    return response.text().then(text => {
                        throw new Error(text || 'Profile update failed');
                    });
                }
                return response.text();
            })
            .then(() => {
                alert('Profile updated successfully!');
                setTimeout(() => {
                    window.location.reload();
                }, 1000);
            })
            .catch(error => {
                alert('Error updating profile: ' + error.message);
            });
        });
    </script>
</body>

</html>