<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Cart</title>
    <link rel="stylesheet" href="/css/my_order.css">
    <link rel="stylesheet" href="/css/header.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body>
    {{> common/header}}
    <div class="main-content">
    <h1><i class="fas fa-shopping-cart"></i> My Cart</h1>
    
    <!-- Products section (left side) -->
    <div class="products-section">
        {{#order.products}}
        <div class="order-container product-item">
            <div class="product-info">
                <h3>{{name}}</h3>
                <p><i class="fas fa-tag"></i> Price: ${{price}}</p>
                <form action="/update-amount" method="post" class="quantity-form">
                    <label for="counter{{id}}"><i class="fas fa-cubes"></i> Quantity:</label>
                    <div class="quantity-control">
                        <button type="button" class="quantity-btn minus" onclick="updateQuantity('{{id}}', -1)"><i class="fas fa-minus"></i></button>
                        <input type="number" id="counter_{{id}}" name="amount" value="{{amount}}" min="1" class="quantity-input">
                        <button type="button" class="quantity-btn plus" onclick="updateQuantity('{{id}}', 1)"><i class="fas fa-plus"></i></button>
                    </div>
                    <input type="hidden" name="productId" value="{{id}}">
                    <button type="submit" class="update-btn"><i class="fas fa-sync-alt"></i> Update</button>
                </form>
                <form action="/remove-from-order" method="post" class="remove-form">
                    <input type="hidden" name="productId" value="{{id}}">
                    <button type="submit" class="remove-btn"><i class="fas fa-trash-alt"></i> Remove</button>
                </form>
            </div>
            <a href="/product-details?id={{id}}" class="product-link">
                <img src="{{imagePath}}" alt="{{name}}" class="product-image">
            </a>
        </div>
        {{/order.products}}
        {{^order.products}}
        <div class="empty-cart">
            <p><i class="fas fa-exclamation-circle"></i> There are no products in your cart.</p>
            <a href="/products" class="continue-shopping"><i class="fas fa-arrow-right"></i> Continue Shopping</a>
        </div>
        {{/order.products}}
    </div>
    
    <!-- Order summary section (right side) -->
    {{#order.hasProducts}}
    <div class="order-summary">
        <!-- Left side: Order summary -->
        <div class="summary-left">
            <h3><i class="fas fa-receipt"></i> Order Summary</h3>
            <ul>
                {{#order.products}}
                <li>
                    <strong>{{name}}</strong> - Quantity: {{amount}} - Price: ${{price}}
                </li>
                {{/order.products}}
            </ul>
            <p class="order-total"><i class="fas fa-money-bill-wave"></i> <strong>Order Total: ${{total}}</strong></p>
        </div>

        <!-- Right part: Address and confirmation button -->
        <div class="summary-right">
            <div class="address-form">
                <h3><i class="fas fa-map-marker-alt"></i> Mailing address</h3>
                <form action="/confirm-order" method="post" class="confirm-order-form">
                    <div class="address-input-container">
                        <i class="fas fa-home address-icon"></i>
                        <input type="text" name="address" value="{{order.address}}" placeholder="Enter your shipping address">
                    </div>
                    <button type="submit" class="confirm-btn"><i class="fas fa-check-circle"></i> Confirm Order</button>
                </form>
            </div>
        </div>
    </div>
    {{/order.hasProducts}}

</div>
    {{> common/footer}}
    <script>
        function updateQuantity(productId, change) {
            const input = document.getElementById(`counter_${productId}`);
            let value = parseInt(input.value) + change;
            if (value < 1) value = 1;
            input.value = value;

            // Send update to server
            fetch('/update-amount', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId,
                    amount: value
                })
            })
            .then(response => response.json()) // Convert response to JSON
            .then(data => {
                if (data.success) {
                    // Update order summary dynamically
                    updateOrderSummary(data);
                } else {
                    alert("There was an error updating the quantity.");
                }
            })
            .catch(error => {
                console.error("Error:", error);
            });
        }

        function updateOrderSummary(data) {
            const orderSummary = document.querySelector('.order-summary ul');
            const totalElement = document.querySelector('.order-summary p');

            // Clear current summary
            orderSummary.innerHTML = '';

            // Add updated products
            data.products.forEach(product => {
                const li = document.createElement('li');
                li.innerHTML = `<strong>${product.name}</strong> - Quantity: ${product.amount} - Price: $${product.price}`;
                orderSummary.appendChild(li);
            });

            // Update order total
            totalElement.innerHTML = `<strong>Order Total: $${data.total}</strong>`;
        }

        function removeFromCart(productId) {
            fetch('/remove-from-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId
                })
            }).then(response => {
                if (response.ok) {
                    window.location.reload();
                }
            });
        }

        function deleteOrder() {
            fetch('/delete-order', {
                method: 'POST',
            }).then(response => {
                if (response.ok) {
                    window.location.reload();
                }
            });
        }
    </script>
</body>
</html>