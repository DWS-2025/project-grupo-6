<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Review Management</title>
    <link rel="stylesheet" href="/css/header.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/css/review-management.css">
    <link rel="stylesheet" href="/css/dark-mode.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="/js/review-management.js" defer></script>
</head>
<body class="min-h-screen flex flex-col">
    {{> common/header}}
    
    <main class="container my-5">
        <div class="section-header">
            <h1 class="section-title"><i class="fas fa-star"></i> Review Management</h1>
            <p class="section-description">Manage and moderate all customer reviews in one centralized dashboard</p>
        </div>
        
        <div class="view-toggle-container">
            <div class="view-toggle">
                <button class="view-toggle-btn active" data-view="users">
                    <i class="fas fa-users"></i> By Users
                </button>
                <button class="view-toggle-btn" data-view="products">
                    <i class="fas fa-box"></i> By Products
                </button>
            </div>
        </div>

        <!-- Vista por Usuarios -->
        <div class="users-view active">
            {{#users.size}}
                {{#users}}
                    <div class="group-card">
                        <div class="group-header" onclick="toggleGroup(this)">
                            <div class="group-title">
                                <div class="group-avatar" data-initial="{{#firstName}}{{.}}{{/firstName}}"></div>
                                <span>{{firstName}} {{lastName}}</span>
                                <span class="review-count">
                                    {{#reviews}}
                                        <span class="review-counter" style="display:none;"></span>
                                    {{/reviews}}
                                    <span class="review-count-number">0</span> reviews
                                </span>
                            </div>
                            <div class="toggle-icon"><i class="fas fa-chevron-down"></i></div>
                        </div>
                        <div class="reviews-list">
                            {{#reviews}}
                                <div class="review-item">
                                    <div class="review-rating" data-rating="{{rating}}">
                                        <!-- Stars will be generated by JavaScript -->
                                    </div>
                                    <div class="review-content">{{{comment}}}</div>
                                    <div class="review-product">
                                        <i class="fas fa-tag"></i> Product: <strong>{{product.name}}</strong>
                                    </div>
                                    <div class="review-meta">
                                        <div class="review-date">
                                            <i class="far fa-clock"></i>
                                            <span>Recently</span>
                                        </div>
                                        <form class="delete-form" action="/delete-review-admin" method="POST">
                                            <input type="hidden" name="productId" value="{{product.id}}">
                                            <input type="hidden" name="reviewId" value="{{id}}">
                                            <button type="submit" onclick="return confirm('Are you sure you want to delete this review?')">
                                                <i class="fas fa-trash-alt"></i> Delete
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            {{/reviews}}
                            {{^reviews}}
                                <div class="review-item">
                                    <p class="text-center my-3">No reviews from this user.</p>
                                </div>
                            {{/reviews}}
                        </div>
                    </div>
                {{/users}}
            {{/users.size}}
            
            {{^users.size}}
                <div class="empty-state">
                    <i class="fas fa-users-slash"></i>
                    <h3>No users found</h3>
                    <p>There are no users with reviews in the system yet.</p>
                </div>
            {{/users.size}}
        </div>
        
        <!-- Vista por Productos -->
        <div class="products-view">
            {{#products.size}}
                {{#products}}
                    <div class="group-card">
                        <div class="group-header" onclick="toggleGroup(this)">
                            <div class="group-title">
                                {{#imagePath}}
                                    <img src="{{imagePath}}" alt="{{name}}" class="group-product-image">
                                {{/imagePath}}
                                {{^imagePath}}
                                    <div class="group-avatar"><i class="fas fa-box"></i></div>
                                {{/imagePath}}
                                <span>{{name}}</span>
                                <span class="review-count">
                                    {{#reviews}}
                                        <span class="review-counter" style="display:none;"></span>
                                    {{/reviews}}
                                    <span class="review-count-number">0</span> reviews
                                </span>
                            </div>
                            <div class="toggle-icon"><i class="fas fa-chevron-down"></i></div>
                        </div>
                        <div class="reviews-list">
                            {{#reviews}}
                                <div class="review-item">
                                    <div class="review-user-info">
                                        <div class="review-user-avatar" data-initial="{{#user.firstName}}{{.}}{{/user.firstName}}"></div>
                                        <span>{{user.firstName}} {{user.lastName}}</span>
                                    </div>
                                    <div class="review-rating" data-rating="{{rating}}">
                                        <!-- Stars will be generated by JavaScript -->
                                    </div>
                                    <div class="review-content">{{{comment}}}</div>
                                    <div class="review-meta">
                                        <div class="review-date">
                                            <i class="far fa-clock"></i>
                                            <span>Recently</span>
                                        </div>
                                        <form class="delete-form" action="/delete-review-admin" method="POST">
                                            <input type="hidden" name="productId" value="{{product.id}}">
                                            <input type="hidden" name="reviewId" value="{{id}}">
                                            <button type="submit" class="tooltip" onclick="return confirm('Are you sure you want to delete this review?')">
                                                <i class="fas fa-trash-alt"></i> Delete
                                                <span class="tooltip-text">Delete this review</span>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            {{/reviews}}
                            {{^reviews}}
                                <div class="review-item">
                                    <p class="text-center my-3">No reviews for this product.</p>
                                </div>
                            {{/reviews}}
                        </div>
                    </div>
                {{/products}}
            {{/products.size}}
            
            {{^products.size}}
                <div class="empty-state">
                    <i class="fas fa-box-open"></i>
                    <h3>No products with reviews</h3>
                    <p>There are no products with reviews in the system yet.</p>
                </div>
            {{/products.size}}
        </div>
    </main>

    <!-- Delete Confirmation Modal -->
    <div class="modal-overlay" id="confirmDeleteModal">
        <div class="confirmation-modal">
            <div class="modal-header">
                <i class="fas fa-exclamation-triangle"></i>
                <h3>Confirmar Eliminación</h3>
            </div>
            <div class="modal-body">
                <p class="modal-message">¿Estás seguro de que deseas eliminar esta reseña? Esta acción no se puede deshacer.</p>
                
                <div class="modal-review-info">
                    <div class="modal-product-info">
                        <i class="fas fa-box"></i>
                        <span>Producto: <strong id="productName"></strong></span>
                    </div>
                    <div class="modal-rating-info">
                        <i class="fas fa-star"></i>
                        <span>Calificación: <strong id="reviewRating"></strong></span>
                    </div>
                </div>
                
                <div class="modal-actions">
                    <button class="modal-btn modal-btn-cancel" id="cancelDelete">
                        <i class="fas fa-times"></i> Cancelar
                    </button>
                    <form id="deleteReviewForm" action="/delete-review-admin" method="POST">
                        <input type="hidden" name="productId" id="productIdInput">
                        <input type="hidden" name="reviewId" id="reviewIdInput">
                        <button type="submit" class="modal-btn modal-btn-confirm">
                            <i class="fas fa-trash-alt"></i> Eliminar
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Function to toggle review groups
        function toggleGroup(element) {
            const reviewsList = element.nextElementSibling;
            reviewsList.classList.toggle('expanded');
            
            const icon = element.querySelector('.toggle-icon');
            icon.classList.toggle('expanded');
            
            // Aplicar la altura adecuada según el estado
            if (reviewsList.classList.contains('expanded')) {
                reviewsList.style.maxHeight = '70vh';
                reviewsList.style.overflowY = 'auto';
            } else {
                reviewsList.style.maxHeight = '0';
                reviewsList.style.overflowY = 'hidden';
            }
            
            // Card animation
            const card = element.closest('.group-card');
            card.style.transform = 'scale(1.02)';
            setTimeout(() => {
                card.style.transform = '';
            }, 300);
        }
        
        // Toggle between users and products view
        document.addEventListener('DOMContentLoaded', function() {
            const viewButtons = document.querySelectorAll('.view-toggle-btn');
            
            viewButtons.forEach(btn => {
                btn.addEventListener('click', function() {
                    // Remove active class from all buttons
                    viewButtons.forEach(b => b.classList.remove('active'));
                    
                    // Add active class to clicked button
                    this.classList.add('active');
                    
                    // Toggle views with fade effect
                    const viewToShow = this.getAttribute('data-view');
                    const usersView = document.querySelector('.users-view');
                    const productsView = document.querySelector('.products-view');
                    
                    if (viewToShow === 'users') {
                        if (!usersView.classList.contains('active')) {
                            productsView.style.opacity = '0';
                            setTimeout(() => {
                                usersView.classList.add('active');
                                productsView.classList.remove('active');
                                setTimeout(() => {
                                    usersView.style.opacity = '1';
                                }, 50);
                            }, 300);
                        }
                    } else {
                        if (!productsView.classList.contains('active')) {
                            usersView.style.opacity = '0';
                            setTimeout(() => {
                                productsView.classList.add('active');
                                usersView.classList.remove('active');
                                setTimeout(() => {
                                    productsView.style.opacity = '1';
                                }, 50);
                            }, 300);
                        }
                    }
                });
            });
            
            // Generate star ratings with star containers for better hover effects
            document.querySelectorAll('.review-rating').forEach(function(element) {
                const rating = parseInt(element.getAttribute('data-rating'));
                let starsHTML = '';
                
                for (let i = 1; i <= 5; i++) {
                    starsHTML += `<span class="star-container">`;
                    if (i <= rating) {
                        starsHTML += `<i class="fas fa-star"></i>`;
                    } else {
                        starsHTML += `<i class="far fa-star"></i>`;
                    }
                    starsHTML += `</span>`;
                }
                
                element.innerHTML = starsHTML;
                
                // Add pulse animation on hover
                element.addEventListener('mouseenter', function() {
                    const stars = this.querySelectorAll('.star-container');
                    stars.forEach((star, index) => {
                        setTimeout(() => {
                            star.style.transform = 'scale(1.2)';
                            setTimeout(() => {
                                star.style.transform = 'scale(1)';
                            }, 150);
                        }, index * 100);
                    });
                });
            });
            
            // Set initials for user avatars
            document.querySelectorAll('[data-initial]').forEach(function(avatar) {
                const initial = avatar.getAttribute('data-initial');
                if (initial && initial.length > 0) {
                    avatar.textContent = initial[0].toUpperCase();
                } else {
                    avatar.textContent = '?';
                }
            });
            
            // Count reviews for each user/product
            document.querySelectorAll('.review-count').forEach(function(countContainer) {
                const counters = countContainer.querySelectorAll('.review-counter');
                const countDisplay = countContainer.querySelector('.review-count-number');
                if (countDisplay) {
                    countDisplay.textContent = counters.length;
                }
            });
            
            // Staggered card loading animations
            document.querySelectorAll('.group-card').forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)';
                
                setTimeout(() => {
                    card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, 100 + (index * 120));
            });
            
            // Extra visual flourish - animate section header on load
            const sectionHeader = document.querySelector('.section-header');
            if (sectionHeader) {
                sectionHeader.style.opacity = '0';
                sectionHeader.style.transform = 'translateY(-20px)';
                
                setTimeout(() => {
                    sectionHeader.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
                    sectionHeader.style.opacity = '1';
                    sectionHeader.style.transform = 'translateY(0)';
                }, 100);
            }
            
            // Animate toggle button container
            const toggleContainer = document.querySelector('.view-toggle-container');
            if (toggleContainer) {
                toggleContainer.style.opacity = '0';
                toggleContainer.style.transform = 'translateY(-10px)';
                
                setTimeout(() => {
                    toggleContainer.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                    toggleContainer.style.opacity = '1';
                    toggleContainer.style.transform = 'translateY(0)';
                }, 400);
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Referencias al DOM
            const deleteModalOverlay = document.getElementById('confirmDeleteModal');
            const cancelDeleteButton = document.getElementById('cancelDelete');
            const productNameElement = document.getElementById('productName');
            const reviewRatingElement = document.getElementById('reviewRating');
            const productIdInput = document.getElementById('productIdInput');
            const reviewIdInput = document.getElementById('reviewIdInput');
            const deleteReviewForm = document.getElementById('deleteReviewForm');
            
            // Reemplazar los botones de eliminación actuales con la versión modal
            document.querySelectorAll('.delete-form').forEach(form => {
                const productId = form.querySelector('input[name="productId"]').value;
                const reviewId = form.querySelector('input[name="reviewId"]').value;
                const productName = form.closest('.review-item').querySelector('.review-product strong').textContent;
                const rating = form.closest('.review-item').querySelector('.review-rating').getAttribute('data-rating');
                
                // Crear un nuevo botón que abre el modal
                const deleteButton = document.createElement('button');
                deleteButton.type = 'button';
                deleteButton.className = 'open-delete-modal';
                deleteButton.innerHTML = '<i class="fas fa-trash-alt"></i> Eliminar';
                deleteButton.setAttribute('data-product-id', productId);
                deleteButton.setAttribute('data-review-id', reviewId);
                deleteButton.setAttribute('data-product-name', productName);
                deleteButton.setAttribute('data-rating', rating);
                
                // Reemplazar el formulario con el nuevo botón
                form.parentNode.replaceChild(deleteButton, form);
            });
            
            // Agregar listeners a los nuevos botones
            document.querySelectorAll('.open-delete-modal').forEach(button => {
                button.addEventListener('click', function() {
                    const productId = this.getAttribute('data-product-id');
                    const reviewId = this.getAttribute('data-review-id');
                    const productName = this.getAttribute('data-product-name');
                    const rating = this.getAttribute('data-rating');
                    
                    // Mostrar estrellas para el rating
                    let starsHTML = '';
                    for (let i = 1; i <= 5; i++) {
                        if (i <= rating) {
                            starsHTML += '<i class="fas fa-star"></i>';
                        } else {
                            starsHTML += '<i class="far fa-star"></i>';
                        }
                    }
                    
                    // Actualizar el modal
                    productNameElement.textContent = productName;
                    reviewRatingElement.innerHTML = starsHTML;
                    productIdInput.value = productId;
                    reviewIdInput.value = reviewId;
                    
                    // Abrir el modal
                    openModal(deleteModalOverlay);
                });
            });
            
            // Cerrar modal cuando se hace clic en Cancelar
            cancelDeleteButton.addEventListener('click', function() {
                closeModal(deleteModalOverlay);
            });
            
            // Cerrar modal cuando se hace clic en el fondo
            deleteModalOverlay.addEventListener('click', function(e) {
                if (e.target === deleteModalOverlay) {
                    closeModal(deleteModalOverlay);
                }
            });
            
            // Agregar listener de tecla Escape
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' && deleteModalOverlay.classList.contains('active')) {
                    closeModal(deleteModalOverlay);
                }
            });
            
            // Funciones auxiliares
            function openModal(modal) {
                modal.classList.add('active');
                document.body.style.overflow = 'hidden';
                
                // Animación de entrada para el modal
                const modalContent = modal.querySelector('.confirmation-modal');
                modalContent.classList.add('animate-in');
                
                setTimeout(() => {
                    modalContent.classList.remove('animate-in');
                }, 500);
            }
            
            function closeModal(modal) {
                const modalContent = modal.querySelector('.confirmation-modal');
                modalContent.classList.add('animate-out');
                
                setTimeout(() => {
                    modal.classList.remove('active');
                    document.body.style.overflow = '';
                    modalContent.classList.remove('animate-out');
                }, 300);
            }
        });
    </script>
</body>
</html> 